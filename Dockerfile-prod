# Build stage
FROM node:18-alpine AS build

WORKDIR /app
COPY . /app

ENV PATH=/app/node_modules/.bin:$PATH
ENV NODE_OPTIONS=--openssl-legacy-provider

RUN yarn && yarn build

# Production stage
FROM nginx:alpine

# Create non-root user and group
RUN addgroup -S worker && adduser -S worker -G worker

# Remove default nginx conf & add custom one
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx/nginx.conf /etc/nginx/conf.d

# Copy build output and script
COPY --from=build /app/build /usr/share/nginx/html
COPY docker-entrypoint.sh /docker-entrypoint.sh

# Fix permissions
RUN chown -R worker:worker /usr/share/nginx \
    #&& chown -R appuser:appgroup /etc/nginx \
    && chown worker:worker /docker-entrypoint.sh \
    && mkdir -p /var/cache/nginx/client_temp \
    && chown -R worker:worker /var/cache/nginx \
    && mkdir -p /tmp && chown -R worker:worker /tmp \
    && chmod +x /docker-entrypoint.sh 

RUN sed -i '/^pid /d' /etc/nginx/nginx.conf \
 && echo 'pid /tmp/nginx.pid;' >> /etc/nginx/nginx.conf

USER worker

EXPOSE 80

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
